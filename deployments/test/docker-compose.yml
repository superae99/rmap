version: '3.8'

services:
  # MySQL Database for Testing
  mysql-test:
    image: mysql:8.0
    container_name: kakao_map_mysql_test
    environment:
      MYSQL_ROOT_PASSWORD: test_root_password
      MYSQL_DATABASE: kakao_map_test
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password_secure
    volumes:
      - mysql_test_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kakao_test_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend
  server-test:
    build:
      context: ../../server
      dockerfile: ../environments/test/Dockerfile.server
    container_name: kakao_map_server_test
    env_file:
      - .env.server
    depends_on:
      mysql-test:
        condition: service_healthy
    networks:
      - kakao_test_network

  # React Frontend
  client-test:
    build:
      context: ../../client
      dockerfile: ../environments/test/Dockerfile.client
    container_name: kakao_map_client_test
    env_file:
      - .env.client
    networks:
      - kakao_test_network

  # Nginx Reverse Proxy
  nginx-test:
    image: nginx:alpine
    container_name: kakao_map_nginx_test
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server-test
      - client-test
    networks:
      - kakao_test_network

volumes:
  mysql_test_data:

networks:
  kakao_test_network:
    driver: bridge